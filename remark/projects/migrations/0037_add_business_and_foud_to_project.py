# Generated by Django 2.2.1 on 2019-05-17 11:58

from django.db import migrations, models
import django.db.models.deletion
import remark.projects.models


def get_business(Business, pk, name, business_type, address):
    try:
        return Business.objects.get(pk=pk)
    except:
        return Business.objects.create(
            public_id=pk,
            name=name,
            business_type=business_type,
            address=address,
        )

def get_fund(Fund, pk, account, name):
    try:
        return Fund.object.get(pk=pk)
    except:
        return Fund.objects.create(
            public_id=pk, account=account, name=name
        )


def update_existing_project(apps, schema_editor):
    Account = apps.get_model("users", "Account")
    Project = apps.get_model("projects", "Project")
    Fund = apps.get_model("projects", "Fund")
    Address = apps.get_model("geo", "Address")
    Business = apps.get_model("crm", "Business")

    account = Account.objects.get(company_name="Remarkably", account_type=4)

    address = Address.objects.create(
        street_address_1="2284 W. Commodore Way, Suite 200",
        city="Seattle",
        state="WA",
        zip_code=98199,
        country="US",
    )

    asset_manager = get_business(Business, "bus_6zkhlxb7fyra0is4", "Remarkably Asset Manager", 2, address)
    property_manager = get_business(Business, "bus_cdxci5ki438rwvcc", "Remarkably Property Manager", 3, address)
    property_owner = get_business(Business, "bus_9js5f2zqmirgmmnj", "Remarkably Property Owner", 1, address)
    fund = get_fund(Fund, "fund_ojo50w9sugy5omed", account, "Remarkably Fund")

    Project.objects.all().update(
        account=account,
        asset_manager=asset_manager,
        property_manager=property_manager,
        property_owner=property_owner,
        fund=fund,
    )

def noop(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("users", "0003_user_account"),
        ("crm", "0001_add_business_model"),
        ("projects", "0036_add_fund_model"),
    ]

    operations = [
        migrations.AddField(
            model_name="project",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="account",
                to="users.Account",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="asset_manager",
            field=models.ForeignKey(
                blank=True,
                null=True,
                limit_choices_to={"business_type": 2},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="asset_manager",
                to="crm.Business",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="fund",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="projects.Fund",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="property_manager",
            field=models.ForeignKey(
                blank=True,
                null=True,
                limit_choices_to={"business_type": 3},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="property_manager",
                to="crm.Business",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="property_owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                limit_choices_to={"business_type": 1},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="property_owner",
                to="crm.Business",
            ),
        ),
        migrations.RunPython(update_existing_project, noop),
        migrations.AlterField(
            model_name="project",
            name="account",
            field=models.ForeignKey(
                blank=False,
                null=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="account",
                to="users.Account",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="asset_manager",
            field=models.ForeignKey(
                blank=False,
                null=False,
                limit_choices_to={"business_type": 2},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="asset_manager",
                to="crm.Business",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="fund",
            field=models.ForeignKey(
                blank=False,
                null=False,
                on_delete=django.db.models.deletion.CASCADE,
                to="projects.Fund",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="property_manager",
            field=models.ForeignKey(
                blank=False,
                null=False,
                limit_choices_to={"business_type": 3},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="property_manager",
                to="crm.Business",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="property_owner",
            field=models.ForeignKey(
                blank=False,
                null=False,
                limit_choices_to={"business_type": 1},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="property_owner",
                to="crm.Business",
            ),
        ),
    ]
