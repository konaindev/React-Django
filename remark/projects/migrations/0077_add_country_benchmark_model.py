# Generated by Django 2.2.7 on 2019-11-27 16:30

from django.db import migrations, models
import remark.projects.models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0076_auto_20191108_0945'),
    ]

    operations = [
        migrations.CreateModel(
            name='CountryBenchmark',
            fields=[
                ('public_id', models.CharField(default=remark.projects.models.benchmark_public_id, editable=False, help_text='National Benchmark ID', max_length=50, primary_key=True, serialize=False)),
                ('start', models.DateField(help_text='Start Date')),
                ('end', models.DateField(help_text='End Date')),
                ('country_id', models.IntegerField(choices=[(1, 'Afghanistan'), (2, 'Aland Islands'), (3, 'Albania'), (4, 'Algeria'), (5, 'American Samoa'), (6, 'Andorra'), (7, 'Angola'), (8, 'Anguilla'), (9, 'Antarctica'), (10, 'Antigua And Barbuda'), (11, 'Argentina'), (12, 'Armenia'), (13, 'Aruba'), (14, 'Australia'), (15, 'Austria'), (16, 'Azerbaijan'), (17, 'Bahamas The'), (18, 'Bahrain'), (19, 'Bangladesh'), (20, 'Barbados'), (21, 'Belarus'), (22, 'Belgium'), (23, 'Belize'), (24, 'Benin'), (25, 'Bermuda'), (26, 'Bhutan'), (27, 'Bolivia'), (28, 'Bosnia and Herzegovina'), (29, 'Botswana'), (30, 'Bouvet Island'), (31, 'Brazil'), (32, 'British Indian Ocean Territory'), (33, 'Brunei'), (34, 'Bulgaria'), (35, 'Burkina Faso'), (36, 'Burundi'), (37, 'Cambodia'), (38, 'Cameroon'), (39, 'Canada'), (40, 'Cape Verde'), (41, 'Cayman Islands'), (42, 'Central African Republic'), (43, 'Chad'), (44, 'Chile'), (45, 'China'), (46, 'Christmas Island'), (47, 'Cocos (Keeling) Islands'), (48, 'Colombia'), (49, 'Comoros'), (50, 'Congo'), (51, 'Congo The Democratic Republic Of The'), (52, 'Cook Islands'), (53, 'Costa Rica'), (54, "Cote D'Ivoire (Ivory Coast)"), (55, 'Croatia (Hrvatska)'), (56, 'Cuba'), (57, 'Cyprus'), (58, 'Czech Republic'), (59, 'Denmark'), (60, 'Djibouti'), (61, 'Dominica'), (62, 'Dominican Republic'), (63, 'East Timor'), (64, 'Ecuador'), (65, 'Egypt'), (66, 'El Salvador'), (67, 'Equatorial Guinea'), (68, 'Eritrea'), (69, 'Estonia'), (70, 'Ethiopia'), (71, 'Falkland Islands'), (72, 'Faroe Islands'), (73, 'Fiji Islands'), (74, 'Finland'), (75, 'France'), (76, 'French Guiana'), (77, 'French Polynesia'), (78, 'French Southern Territories'), (79, 'Gabon'), (80, 'Gambia The'), (81, 'Georgia'), (82, 'Germany'), (83, 'Ghana'), (84, 'Gibraltar'), (85, 'Greece'), (86, 'Greenland'), (87, 'Grenada'), (88, 'Guadeloupe'), (89, 'Guam'), (90, 'Guatemala'), (91, 'Guernsey and Alderney'), (92, 'Guinea'), (93, 'Guinea-Bissau'), (94, 'Guyana'), (95, 'Haiti'), (96, 'Heard and McDonald Islands'), (97, 'Honduras'), (98, 'Hong Kong S.A.R.'), (99, 'Hungary'), (100, 'Iceland'), (101, 'India'), (102, 'Indonesia'), (103, 'Iran'), (104, 'Iraq'), (105, 'Ireland'), (106, 'Israel'), (107, 'Italy'), (108, 'Jamaica'), (109, 'Japan'), (110, 'Jersey'), (111, 'Jordan'), (112, 'Kazakhstan'), (113, 'Kenya'), (114, 'Kiribati'), (115, 'Korea North\n'), (116, 'Korea South'), (117, 'Kuwait'), (118, 'Kyrgyzstan'), (119, 'Laos'), (120, 'Latvia'), (121, 'Lebanon'), (122, 'Lesotho'), (123, 'Liberia'), (124, 'Libya'), (125, 'Liechtenstein'), (126, 'Lithuania'), (127, 'Luxembourg'), (128, 'Macau S.A.R.'), (129, 'Macedonia'), (130, 'Madagascar'), (131, 'Malawi'), (132, 'Malaysia'), (133, 'Maldives'), (134, 'Mali'), (135, 'Malta'), (136, 'Man (Isle of)'), (137, 'Marshall Islands'), (138, 'Martinique'), (139, 'Mauritania'), (140, 'Mauritius'), (141, 'Mayotte'), (142, 'Mexico'), (143, 'Micronesia'), (144, 'Moldova'), (145, 'Monaco'), (146, 'Mongolia'), (147, 'Montenegro'), (148, 'Montserrat'), (149, 'Morocco'), (150, 'Mozambique'), (151, 'Myanmar'), (152, 'Namibia'), (153, 'Nauru'), (154, 'Nepal'), (155, 'Netherlands Antilles'), (156, 'Netherlands The'), (157, 'New Caledonia'), (158, 'New Zealand'), (159, 'Nicaragua'), (160, 'Niger'), (161, 'Nigeria'), (162, 'Niue'), (163, 'Norfolk Island'), (164, 'Northern Mariana Islands'), (165, 'Norway'), (166, 'Oman'), (167, 'Pakistan'), (168, 'Palau'), (169, 'Palestinian Territory Occupied'), (170, 'Panama'), (171, 'Papua new Guinea'), (172, 'Paraguay'), (173, 'Peru'), (174, 'Philippines'), (175, 'Pitcairn Island'), (176, 'Poland'), (177, 'Portugal'), (178, 'Puerto Rico'), (179, 'Qatar'), (180, 'Reunion'), (181, 'Romania'), (182, 'Russia'), (183, 'Rwanda'), (184, 'Saint Helena'), (185, 'Saint Kitts And Nevis'), (186, 'Saint Lucia'), (187, 'Saint Pierre and Miquelon'), (188, 'Saint Vincent And The Grenadines'), (189, 'Saint-Barthelemy'), (190, 'Saint-Martin (French part)'), (191, 'Samoa'), (192, 'San Marino'), (193, 'Sao Tome and Principe'), (194, 'Saudi Arabia'), (195, 'Senegal'), (196, 'Serbia'), (197, 'Seychelles'), (198, 'Sierra Leone'), (199, 'Singapore'), (200, 'Slovakia'), (201, 'Slovenia'), (202, 'Solomon Islands'), (203, 'Somalia'), (204, 'South Africa'), (205, 'South Georgia'), (206, 'South Sudan'), (207, 'Spain'), (208, 'Sri Lanka'), (209, 'Sudan'), (210, 'Suriname'), (211, 'Svalbard And Jan Mayen Islands'), (212, 'Swaziland'), (213, 'Sweden'), (214, 'Switzerland'), (215, 'Syria'), (216, 'Taiwan'), (217, 'Tajikistan'), (218, 'Tanzania'), (219, 'Thailand'), (220, 'Togo'), (221, 'Tokelau'), (222, 'Tonga'), (223, 'Trinidad And Tobago'), (224, 'Tunisia'), (225, 'Turkey'), (226, 'Turkmenistan'), (227, 'Turks And Caicos Islands'), (228, 'Tuvalu'), (229, 'Uganda'), (230, 'Ukraine'), (231, 'United Arab Emirates'), (232, 'United Kingdom'), (233, 'United States'), (234, 'United States Minor Outlying Islands'), (235, 'Uruguay'), (236, 'Uzbekistan'), (237, 'Vanuatu'), (238, 'Vatican City State (Holy See)'), (239, 'Venezuela'), (240, 'Vietnam'), (241, 'Virgin Islands (British)'), (242, 'Virgin Islands (US)'), (243, 'Wallis And Futuna Islands'), (244, 'Western Sahara'), (245, 'Yemen'), (246, 'Zambia'), (247, 'Zimbabwe')], default=233)),
                ('category', models.IntegerField(choices=[(1, 'Number of Units 0-149'), (2, 'Number of Units 150-299'), (3, 'Number of Units 300+'), (4, 'Property Class A'), (5, 'Property Class B'), (6, 'Property Class C')])),
                ('kpi', models.CharField(choices=[('cds', 'Cancellations/Denials'), ('notice_to_renew', 'Notices to Renew'), ('notice_to_vacate', 'Notices to Vacate'), ('move_ins', 'Move Ins'), ('move_outs', 'Move Outs'), ('lease_renewals', 'Lease Renewals'), ('usvs', 'Volume of USV'), ('inqs', 'Volume of INQ'), ('tous', 'Volume of TOU'), ('apps', 'Volume of APP'), ('exes', 'Volume of EXE'), ('cost_per_usv', 'Cost per USV'), ('cost_per_inq', 'Cost per INQ'), ('cost_per_tou', 'Cost per TOU'), ('cost_per_app', 'Cost per APP'), ('cost_per_exe', 'Cost per EXE'), ('retention_rate', 'Retention Rate'), ('usv_exe', 'USV > EXE'), ('cd_rate', 'Cancellation and Denial Rate'), ('cost_per_exe_lmr', 'Cost per EXE / LMR'), ('usv_inq', 'USV > INQ'), ('inq_tou', 'INQ > TOU'), ('tou_app', 'TOU > APP'), ('app_exe', 'APP > EXE')], max_length=50)),
                ('threshold_0', models.FloatField(help_text='Threshold between Low Performing and Below Average')),
                ('threshold_1', models.FloatField(help_text='Threshold between Below Average and Average')),
                ('threshold_2', models.FloatField(help_text='Threshold between Average and Above Average')),
                ('threshold_3', models.FloatField(help_text='Threshold between Above Average and High Performing')),
                ('property_count_0', models.IntegerField(help_text='Property Count for Low Performing')),
                ('property_count_1', models.IntegerField(help_text='Property Count for Below Average Performing')),
                ('property_count_2', models.IntegerField(help_text='Property Count for Average Performing')),
                ('property_count_3', models.IntegerField(help_text='Property Count for Above Average Performing')),
                ('property_count_4', models.IntegerField(help_text='Property Count for High Performing')),
                ('total_property_count', models.IntegerField(help_text='All the properties in this category')),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
