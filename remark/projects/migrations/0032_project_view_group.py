# Generated by Django 2.2 on 2019-05-02 01:49

from django.db import migrations, models
import django.db.models.deletion


def add_groups_for_existing_projects(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Project = apps.get_model('projects', 'Project')
    for project in Project.objects.all():
        view_group = Group(name=f"{project.name} view group")
        view_group.save()
        project.view_group = view_group
        project.save()


def remove_orphaned_groups(apps, schema_editor):
    Project = apps.get_model('projects', 'Project')
    for project in Project.objects.all():
        if project.view_group is not None:
            project.view_group.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('projects', '0031_merge_20190430_1933'),
    ]

    operations = [
        migrations.AddField(
            model_name='project',
            name='view_group',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group'),
        ),
        migrations.RunPython(add_groups_for_existing_projects, remove_orphaned_groups),
    ]
