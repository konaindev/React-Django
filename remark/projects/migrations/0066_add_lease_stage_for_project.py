# Generated by Django 2.2.3 on 2019-07-24 12:56

from django.db import migrations, models


def get_project_start_end(project):
    periods = project.periods.all().order_by('start')
    start_period = periods.first()
    end_period = periods.last()
    # If there are no periods then use `baseline` dates
    start = project.baseline_start
    end = project.baseline_end
    if start_period:
        start = start_period.start
    if end_period:
        end = end_period.end
    return start, end


def add_lease_stage_to_project(apps, schema_editor):
    LeaseStage = apps.get_model('projects', 'LeaseStage')
    PropertyLeaseStage = apps.get_model('projects', 'PropertyLeaseStage')
    Project = apps.get_model('projects', 'Project')
    stage = LeaseStage.objects.get(short_name="stabilization")

    for p in Project.objects.all():
        start, end = get_project_start_end(p)
        pls = PropertyLeaseStage(lease_stage=stage, project=p, start=start, end=end)
        pls.save()


def remove_lease_stage_from_project(apps, schema_editor):
    LeaseStage = apps.get_model('projects', 'LeaseStage')
    PropertyLeaseStage = apps.get_model('projects', 'PropertyLeaseStage')
    Project = apps.get_model('projects', 'Project')
    stage = LeaseStage.objects.get(short_name="stabilization")

    for p in Project.objects.all():
        start, end = get_project_start_end(p)
        try:
            pls = PropertyLeaseStage.objects.get(lease_stage=stage, project=p, start=start, end=end)
        except models.Model.DoesNotExist:
            continue
        pls.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0065_fill_lease_stages'),
    ]

    operations = [
        migrations.RunPython(add_lease_stage_to_project, remove_lease_stage_from_project)
    ]
