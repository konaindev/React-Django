# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.1
  node: circleci/node@1.1.3

jobs:
  aws-cli:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/configure:
          profile-name: circle-stage

  build:
    docker:
      # specify the version you desire here
      - image: circleci/python:3.6.4

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test-ui

  deploy-staging:
    docker:
      # specify the version you desire here
      - image: circleci/python:3.6.4

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout
      - aws-cli/install
      - aws-cli/configure:
          profile-name: circle
      - run:
          name: Fetch .env from s3
          command: |
            aws s3 cp s3://remarkably-staging-58d2d32d-caeb-4629-a941-3b16bb028421/env ./.env
      - run:
          name: Deploy Staging to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2.1

  tests-only:
    jobs:
      - node/npm install -g yarn
      - build:
          filters:
            branches:
              ignore: staging

  build-deploy:
    jobs:
      - build
      - deploy-staging:
          context: stage-aws
          requires:
            - build
          filters:
            branches:
              only: cicd-staging
